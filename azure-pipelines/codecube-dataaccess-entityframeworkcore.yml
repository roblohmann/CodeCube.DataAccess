# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: $(Version.Major).$(Version.Minor).$(Rev:r)

trigger:
 batch: true
 branches:
  include: 
    - master-net6

pool:
  vmImage: ubuntu-latest

- stage: Build
  displayName: 'Build and run tests'
  jobs:
  - job: Build
    displayName: 'Build'
    steps:
    - task: Assembly-Info-NetCore@3
      inputs:
        Path: '$(Build.SourcesDirectory)'
        FileNames: '**/*.csproj'
        InsertAttributes: false
        FileEncoding: 'auto'
        WriteBOM: false
        PackageId: 'CodeCube.DataAccess.EntityFrameworkCore'
        Authors: 'Rob Lohmann'
        Copyright: 'Copyright 2020 - 2022 Rob Lohmann'
        VersionNumber: '$(Build.BuildNumber)'
        FileVersionNumber: '$(Build.BuildNumber)'
        InformationalVersion: '$(Build.BuildNumber)'
        LogLevel: 'verbose'
        FailOnWarning: false
        DisableTelemetry: false
    - task: DotNetCoreCLI@2
      inputs:
        command: 'build'
        projects: '**/CodeCube.DataAccess.EntityFrameworkCore.csproj'
        arguments: '-c Release'
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '**/CodeCube.DataAccess.EntityFrameworkCore.Tests.csproj'
- stage: 'NuGet'
  dependsOn: 'Build'
  condition: 'and(succeeded(), ne(variables['Build.Reason'], 'PullRequest'))'
  jobs:
  - job: ' NuGet'
    displayName: 'Deploy NuGet'
    steps:
    - task: NuGetCommand@2
      displayName: 'Push NuGet'
      inputs:
        command: 'push'
        packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
        nuGetFeedType: 'external'
        publishFeedCredentials: 'nuget.org'
